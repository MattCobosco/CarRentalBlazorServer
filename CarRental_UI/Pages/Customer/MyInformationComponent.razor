@page "/myinformation"
@attribute [Authorize(Policy = "CustomerOnly")]
@using UseCases.UseCaseInterfaces.CustomerUseCaseInterfaces
@using UseCases.UseCaseInterfaces.UserUseCaseInterfaces

@inject NavigationManager _navigationManager
@inject IGetCurrentUserGuidUseCase _getCurrentUserGuidUseCase
@inject IGetCustomerByGuidUseCase _getCustomerByGuidUseCase

<h3>My Information</h3>
<br />
<ul class="list-group">
    <li class="list-group-item">GUID: @_customer.CustomerGuid</li>
    <li class="list-group-item">First Name: @_customer.FirstName</li>
    <li class="list-group-item">Last Name: @_customer.LastName</li>
    <li class="list-group-item">Contact details: @_customer.ContactDetails</li>
    <li class="list-group-item">Address: @_customer.Address</li>
    <li class="list-group-item">ID#: @_customer.PersonalDocumentNumber</li>
    <li class="list-group-item">Driving License#: @_customer.DrivingLicenseNumber</li>
    <li class="list-group-item">Pesel: @_customer.Pesel</li>
</ul>
<button type="button" @onclick="EditCustomerInformationOnClick" class="btn btn-primary">Edit</button>


@code
{
    private string _userGuid;
    private Customer _customer;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        LoadData();
    }

    private void EditCustomerInformationOnClick()
    {
        _navigationManager.NavigateTo($"editmyinformation");
    }

    private void LoadData()
    {
        _userGuid = _getCurrentUserGuidUseCase.Execute();
        _customer = _getCustomerByGuidUseCase.Execute(_userGuid);
    } 
}
