@page "/addbranch"
@using UseCases.UseCaseInterfaces.BranchUseCaseInterfaces

@inject NavigationManager _navigationManager
@inject IAddBranchUseCase _addBranchUseCase

<h3>Add Branch</h3>
<br/>

@if(_branch != null)
{
<EditForm Model="_branch" OnValidSubmit="OnValidSubmit">
    <DataAnnotationsValidator></DataAnnotationsValidator>
    <ValidationSummary></ValidationSummary>

    <div class="form-group">
        <label for="name">Name</label>
        <InputText id="name" @bind-Value="_branch.Name" class="form-control"></InputText>
    </div>

    <div class="form-group">
        <label for="address">Address</label>
        <InputText id="address" @bind-Value="_branch.Address" class="form-control"></InputText>
    </div>
    
    <div class="form-group">
        <label for="description">Description</label>
        <InputText id="description" @bind-Value="_branch.Description" class="form-control"></InputText>
    </div>
    
    <button type="submit" class="btn btn-primary">Save</button>
    <button type="button" class="btn btn-primary" @onclick="OnCancel">Cancel</button>
</EditForm>
}

@code {

    private Branch _branch;

    protected override void OnInitialized()
    {
        base.OnInitialized();

        _branch = new Branch();
    }

    private void OnValidSubmit()
    {
        _addBranchUseCase.Execute(_branch);
        _navigationManager.NavigateTo("/branches");
    }

    private void OnCancel()
    {
        _navigationManager.NavigateTo("/branches");
    }

}
