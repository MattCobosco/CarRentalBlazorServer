@page "/editfleetvehicle/{fleetVehicleLicensePlate}"
@attribute [Authorize(Policy = "EmployeeOnly")]
@using UseCases.UseCaseInterfaces.FleetVehicleUseCaseInterfaces
@using UseCases.UseCaseInterfaces.BranchUseCaseInterfaces
@using UseCases.UseCaseInterfaces.VehicleModelUseCaseInterfaces

@inject NavigationManager _navigationManager
@inject IGetFleetVehicleByLicensePlateUseCase _getFleetVehicleByLicensePlateUseCase
@inject IEditFleetVehicleUseCase _editFleetVehicleUseCase
@inject IViewBranchesUseCase _viewBranchesUseCase
@inject IViewVehicleModelsUseCase _viewVehicleModelsUseCase

<h3>Edit Fleet Vehicle</h3>
<br />

@if (_fleetVehicle != null)
{
    <EditForm Model="_fleetVehicle" OnValidSubmit="OnValidSubmit">
        <DataAnnotationsValidator></DataAnnotationsValidator>
        <ValidationSummary></ValidationSummary>

        <div class="form-group">
            <label for="licensePlate">License Plate</label>
            <InputText id="licensePlate" @bind-Value="_fleetVehicle.FleetVehicleLicensePlate" class="form-control"></InputText>
        </div>

        <div class="form-group">
            <label for="odometer">Odometer</label>
            <InputNumber id="odometer" @bind-Value="_fleetVehicle.Odometer" class="form-control"></InputNumber>
        </div>

        <div class="form-group">
            <label for="vin">VIN</label>
            <InputText id="vin" @bind-Value="_fleetVehicle.Vin" class="form-control"></InputText>
        </div>

        <div class="form-group">
            <label for="maintenanceDate">Maintenance Date</label>
            <InputDate id="maintenanceDate" @bind-Value="_fleetVehicle.MaintenanceDate" class="form-control"></InputDate>
        </div>

        <div class="form-group">
            <label for="maintenanceOdometer">Maintenance Odometer</label>
            <InputNumber id="maintenanceOdometer" @bind-Value="_fleetVehicle.MaintenanceOdometer" class="form-control"></InputNumber>
        </div>

        <div class="form-group">
            <label for="modelVehicle">Model Vehicle</label>
            <InputSelect id="modelVehicle" @bind-Value="_fleetVehicle.VehicleModelId" class="form-control">
                @foreach (var vehicleModel in _vehicleModels)
                    {
                    <option value="@vehicleModel.VehicleModelId">@vehicleModel.Make @vehicleModel.Model @vehicleModel.ModelYear @vehicleModel.EngineType Automatic: @vehicleModel.AutomaticGearbox</option>
                    }
            </InputSelect>
        </div>

        <div class="form-group">
            <label for="currentBranch">Current Branch</label>
            <InputSelect id="currentBranch" @bind-Value="_fleetVehicle.CurrentBranchId" class="form-control">
                @foreach (var branch in _branches)
                    {
                    <option value="@branch.BranchId">@branch.Name</option>
                    }
            </InputSelect>
        </div>

        <button type="submit" class="btn btn-primary">Save</button>
        <button type="button" class="btn btn-primary" @onclick="OnCancel">Cancel</button>
    </EditForm>
}

@code {

    [Parameter]
    public string FleetVehicleLicensePlate { get; set; }

    private FleetVehicle _fleetVehicle;
    private List<Branch> _branches;
    private List<VehicleModel> _vehicleModels;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        LoadLists();
    }

    protected override void OnParametersSet()
    {
        base.OnParametersSet();

        var fleet = _getFleetVehicleByLicensePlateUseCase.Execute(FleetVehicleLicensePlate);

        _fleetVehicle = new FleetVehicle
        {
            FleetVehicleLicensePlate = fleet.FleetVehicleLicensePlate,
            Odometer = fleet.Odometer,
            Vin = fleet.Vin,
            MaintenanceDate = fleet.MaintenanceDate,
            MaintenanceOdometer = fleet.MaintenanceOdometer,
            DateAdded = fleet.DateAdded,
            VehicleModelId = fleet.VehicleModelId,
            CurrentBranchId = fleet.CurrentBranchId
        };
    }

    private void OnValidSubmit()
    {
        _editFleetVehicleUseCase.Execute(_fleetVehicle);
        _navigationManager.NavigateTo("/fleetvehicles");
    }

    private void OnCancel()
    {
        _navigationManager.NavigateTo("/fleetvehicles");
    }

    private void LoadLists()
    {
        _branches = _viewBranchesUseCase.Execute()?.ToList();
        _vehicleModels = _viewVehicleModelsUseCase.Execute()?.ToList();
    }

}
